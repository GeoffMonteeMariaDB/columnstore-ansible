---

- hosts: "pm,mx"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Getting MariaDB Enterprise Repo Setup Script"
    get_url:
      url: https://dlm.mariadb.com/enterprise-release-helpers/mariadb_es_repo_setup
      dest: /usr/local/bin/mariadb_es_repo_setup
      mode: 'a+x'

  - name: "Setting Up MariaDB Enterprise Repo"
    command: /usr/local/bin/mariadb_es_repo_setup --token={{ enterprise_token }} --skip-tools --mariadb-server-version='{{ mariadb_version }}' --mariadb-maxscale-version='{{ maxscale_version }}' --apply

- hosts: "pm"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Creating CMAPI Folder"
    file:
      path: /opt/cmapi
      state: directory
      mode: '0755'

  - name: "Downloading CMAPI Server"
    unarchive:
      src: https://dlm.mariadb.com/{{ enterprise_token }}/mariadb-enterprise-server/10.5.6-4/cmapi/mariadb-columnstore-cmapi-1.1.tar.gz
      dest: /opt/cmapi
      remote_src: yes

  - name: "Installing MariaDB Items"
    package:
      name: '{{ item }}'
      state: present
      update_cache: yes
      disable_gpg_check: yes
    with_items:
      - '{{ mariadb_shared }}'
      - '{{ mariadb_client }}'
      - '{{ mariadb_server }}'
      - '{{ mariadb_backup }}'
      - '{{ mariadb_columnstore }}'

  - name: "Configuring Storagemanager"
    template:
      src: ../templates/storagemanager.cnf.j2
      dest: /etc/columnstore/storagemanager.cnf
      owner: mysql
      group: mysql
    when: use_s3 == true

  - name: "Checking If CMAPI Is Already Installed"
    stat:
      path: /etc/systemd/system/mariadb-columnstore-cmapi.service
    register: stat_result

  - name: "Installing CMAPI Server"
    shell:
      cmd: ./service.sh install
      chdir: /opt/cmapi
    when: not stat_result.stat.exists

  - name: "Setting Server IDs"
    replace:
      path: '{{ columnstore_cnf }}'
      regexp: '^#server-id.*1$'
      replace: "server_id = {{ inventory_hostname.split('m')[-1] }}"

  - name: "Configuring columnstore.cnf"
    blockinfile:
      path: '{{ columnstore_cnf }}'
      block: |
        character_set_server = utf8
        collation_server = utf8_general_ci
        log_bin = /var/log/mariadb/mariadb-bin
        log_bin_index = /var/log/mariadb/mariadb-bin.index
        log_error = /var/log/mariadb/maridb-error.log
        relay_log = /var/log/mariadb/mariadb-relay
        relay_log_index = /var/log/mariadb/mariadb-relay.index
        log_slave_updates = ON
        gtid_strict_mode = ON
        columnstore_use_import_for_batchinsert=ON

  - name: "Enabling MariaDB Server"
    systemd:
      name: mariadb
      state: started
      enabled: yes

  - name: "Enabling Columnstore Engine"
    systemd:
      name: mariadb-columnstore
      state: started
      enabled: yes
      no_block: yes

  - name: "Enabling CMAPI Server"
    systemd:
      name: mariadb-columnstore-cmapi
      state: started
      enabled: yes

  - name: "Verify Ownership Of Log Folder"
    file:
      path: /var/log/mariadb
      state: directory
      owner: mysql
      group: mysql
      mode: '0755'

  - name: "Verify Ownership Of Log Files"
    file:
      path: /var/log/mariadb/columnstore/{{ item }}
      owner: mysql
      group: mysql
      state: touch
      mode: '0644'
    with_items:
      - 'crit.log'
      - 'debug.log'
      - 'err.log'
      - 'info.log'
      - 'warning.log'

- hosts: "mx1"
  become: yes
  become_user: root
  vars_files:
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

  - name: "Installing MaxScale Items"
    package:
      name: '{{ item }}'
      state: present
      update_cache: yes
      disable_gpg_check: yes
    with_items:
      - '{{ maxscale }}'
